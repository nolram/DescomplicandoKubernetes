VAGRANTFILE_API_VERSION = "2"
MEMORY = 8000
CPU_CORE = 4
MASTER_NODE = "elliot-01"

INET_IFACE="enp6s0"

$kube_node_join_in_cluster = <<-'SCRIPT'
  ENV['KUBE_TOKEN_JOIN']=$(kubeadm tokens list)
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  (1..3).each do |i|
    config.vm.define "elliot-0#{i}" do |node|
      node.vm.box = "ubuntu/jammy64"
      node.vm.hostname = "elliot-0#{i}"
      node.vm.network 'private_network', ip: "192.168.56.#{i}0"
        
        node.vm.provision "modules",
          type: "shell",
          preserve_order: true,
          path: "scripts/modules.sh"

        node.vm.provision "runtime-cri-o-config",
          type: "shell",
          preserve_order: true,
          path: "scripts/runtime-cri-o-config.sh"

        node.vm.provision "cluster-tools",
          type: "shell",
          preserve_order: true,
          path: "scripts/cluster-tools.sh"

      node.vm.provider "virtualbox" do |vb|
        vb.name = "elliot-0#{i}"
        vb.memory = MEMORY
        vb.cpus = CPU_CORE
      end
      if node.vm.hostname == MASTER_NODE then
        node.vm.provision "k8s-init-cluster",
        type: "shell",
        preserve_order: true,
        path: "scripts/k8s-init-cluster.sh",
        env: { "HOST_IP" => "192.168.56.#{i}0" }
        node.vm.synced_folder "token-vm-k8s", "/home/vagrant/token"
      else
        node.vm.provision "file", source: "token-vm-k8s/.token_join", destination: "/home/vagrant/.token_join"
        node.vm.provision "node-join-in-cluster",
          type: "shell",
          preserve_order: true,
          env: { "HOST_IP" => "192.168.56.#{i}0" },
          inline: "cat /home/vagrant/.token_join | bash"
      end
    end
  end
end